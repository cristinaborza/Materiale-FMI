.data 
	spatiu:.asciiz " "
	v:.word 1, 2, 4, 5
	n:.word 4
	t:.word 16
	x:.word 2
.text
main:
	lw $t0, t
	subu $sp, 4
	sw $t0, 0($sp)

	lw $t0, x
	subu $sp, 4
	sw $t0, 0($sp)

	lw $t0, n
	subu $sp, 4
	sw $t0, 0($sp)
	
	la $t0, v
	subu $sp, 4
	sw $t0, 0($sp)

	jal eval
	addu $sp, 16

	move $a0, $v1
	li $v0, 1
	syscall

	li $v0, 10
	syscall
eval:
	subu $sp, 4
	sw $fp, 0($sp)
	addi $fp, $sp, 4
				#$sp:($fpv)$fp:($v)($n)($x)($t)

	subu $sp, 4
	sw $ra, 0($sp)
				#sp:($rav)$fp:($v)($n)($x)($t)
	
	subu $sp, 4
	sw $s0, 0($sp)
	subu $sp, 4
	sw $s1, 0($sp)
	subu $sp, 4
	sw $s2, 0($sp)
	subu $sp, 4
	sw $s3, 0($sp)
				#$sp:($s3v)($s2v)($s1v)($s0v)($rav)($fpv)$fp:($v)($n)($x)($t)
	
	lw $s0, 4($fp) #n
	lw $s1, 0($fp) #v
	lw $s2, 8($fp) #x
	lw $s3, 12($fp) #t

	li $t0, 0
loop:	
	bge $t0, $s0, exit
	
	lw $t1, 0($s1)
	subu $sp, 4
	sw $t1, 0($sp)
	subu $sp, 4
	sw $s3, 0($sp)

	jal este_putere
	addu $sp, 8

	sub $t2, $0, $v0
	addi $t2, $t2, 1

	lw $t4, 0($s1)
	mul $t3, $t4, $s2
	addi $t3, $t3, 1

	mul $t2, $t2, $t3
	add $v1, $v1, $t2
	
	addi $s1, 4
	addi $t0, 1
	j loop
exit:
	lw $s3, -24($fp)
	lw $s2, -20($fp)
	lw $s1, -16($fp)
	lw $s0, -12($fp)
	lw $ra, -8($fp)
	lw $fp, -4($fp)
	addu $sp, 24
	jr $ra
este_putere:
	subu $sp, 4
	sw $fp, 0($sp)
	addi $fp, $sp, 4
	#$sp:($fpv)$fp:($x)($y)

	subu $sp, 4
	sw $ra, 0($sp)
	#sp:($rav)$fp:($x)($y)

	subu $sp, 4
	sw $s0, 0($sp)
	subu $sp, 4
	sw $s1, 0($sp)
	
	#$sp:($s1v)($s0v)($rav)($fpv)$fp:($x)($y)

	lw $s0, 0($fp) #x	
	lw $s1, 4($fp) #y

	li $t1, 1
	li $v0, 0
	
	beq $s1, $s0, sunt_egale
	beq $s1, $t1, exit1 
loop1:	
	bgt $t1, $s0, exit1
	beq $t1, $s0, sunt_egale
	
	mul $t1, $t1, $s1
	j loop1
sunt_egale:
	li $v0, 1
	j exit1
exit1:
	lw $s1, -16($fp)
	lw $s0, -12($fp)
	lw $ra, -8($fp)
	lw $fp, -4($fp)
	addu $sp, 16
	jr $ra