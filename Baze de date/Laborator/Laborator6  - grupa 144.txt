--Laborator 3 + 4


10. Folosind subcereri, să se afişeze numele şi data angajării pentru salariaţii care au
fost angajaţi după Gates.


SELECT last_name, hire_date
FROM employees
WHERE hire_date > ( SELECT hire_date
                    FROM employees
                    WHERE INITCAP(last_name)= 'Gates'
                  );
                  
Obs: operator poate fi:
• single-row operator (>, =, >=, <, <>, <=), care poate fi utilizat dacă
subcererea returnează o singură linie;
• multiple-row operator (IN, ANY, ALL), care poate fi folosit dacă subcererea
returnează mai mult de o linie.




11. Folosind subcereri, scrieţi o cerere pentru a afişa numele şi salariul pentru toţi
colegii (din acelaşi departament) lui Gates. Se va exclude Gates.


select last_name, salary
from employees
where department_id = ( select department_id 
                         from employees
                         where initcap(last_name) = 'Gates'
                        --cererea interioara (nesincronizata) pentru a determina departametul lui Gates
                      )
      and initcap(last_name) != 'Gates';


                      
--Se va inlocui Gates cu King
select last_name, salary
from employees
where department_id IN ( select department_id 
                         from employees
                         where initcap(last_name) = 'King'
                        --cererea interioara (nesincronizata) pentru a determina departametul lui Gates
                      )
      and initcap(last_name) != 'King';




12. Folosind subcereri, să se afişeze numele şi salariul angajaţilor conduşi direct de
preşedintele companiei (acesta este considerat angajatul care nu are manager).


--cererea principala
select last_name, salary
from employees
where manager_id = (select employee_id
                    from employees
                    where manager_id is null
                    -- subcerere pentru a prelua managerul companiei -> id-ul
                    );


-- subcerere pentru a prelua managerul companiei -> id-ul
select employee_id
from employees
where manager_id is null;




13. Scrieți o cerere pentru a afişa numele, codul departamentului și salariul
angajaților al căror cod de departament și salariu coincid cu codul departamentului și
salariul unui angajat care câștigă comision.


SELECT last_name, department_id, salary
FROM employees
WHERE (department_id, salary) IN (  SELECT department_id, salary
                                    FROM employees
                                    WHERE commission_pct is not null
                                  );




14. Să se afișeze codul, numele și salariul tuturor angajaților al căror salariu este mai
mare decât salariul mediu.


SELECT employee_id, last_name, salary
FROM employees
WHERE salary > (SELECT AVG(salary)
                FROM employees); -- cererea interioara calculeaza salariu mediu din firma




15. Scrieti o cerere pentru a afișa angajații care câștigă (salariul plus comision) mai mult
decât oricare funcționar (job-ul conţine şirul “CLERK”). Sortați rezultatele dupa salariu,
în ordine descrescătoare.




--subcerere care selecteaza venitul maxim al functionarilor 
select max(salary + salary * nvl(commission_pct, 0))
from employees
where upper(job_id) like '%CLERK%';


-- cererea principala
select *
from employees
where salary + salary * nvl(commission_pct, 0) > (select max(salary + salary * nvl(commission_pct, 0))
                                                  from employees
                                                  where upper(job_id) like '%CLERK%')
order by salary desc;




-- varianta 2
select *
from employees
where salary + salary * nvl(commission_pct, 0) > ALL (select salary + salary * nvl(commission_pct, 0)
                                                  from employees
                                                  where upper(job_id) like '%CLERK%');


-> IN, ALL, ANY




-> >ALL - inseamna mai mult decat toti functionarii - mai mare decat maximul 
   >ANY - inseamna ca este suficient sa fie mai mare decat salariul unui singur functionar 




16. Scrieţi o cerere pentru a afişa numele angajatilor, numele departamentului şi
salariul angajaţilor care nu câştigă comision, dar al căror şef direct câştigă comision.


SELECT last_name, department_name, salary
FROM employees e JOIN departments d USING (department_id)
WHERE commission_pct is null and
      e.manager_id IN (SELECT employee_id
                       FROM employees
                       WHERE commission_pct is not null);




17. Să se afișeze numele angajatilor, departamentul, salariul şi job-ul tuturor
angajaților al căror salariu și comision coincid cu salariul și comisionul unui angajat din
Oxford.


SELECT last_name, department_id, salary, job_id, employee_id
FROM employees
WHERE (nvl(commission_pct, -1), salary) IN
                   (SELECT nvl(commission_pct, -1), salary
                    FROM employees e JOIN departments d ON (e.department_id = d.department_id)
                    JOIN locations l ON (l.location_id = d.location_id)
                    WHERE initcap(l.city)='Oxford'
                    );
                    
(-1, 24000) in (-1, 24000)


-- LABORATOR 4
create table grupare (id number(5) not null,
                      nume varchar2(10) not null,
                      salariu number(10) not null,
                      manager_id number(5) not null);
                      
select * from grupare;


insert into grupare values (1, 'user1', 1000, 1);


insert into grupare values (2, 'user2', 1400, 1);


insert into grupare values (3, 'user3', 700, 2);


insert into grupare values (4, 'user4', 300, 2);


insert into grupare values (5, 'user5', 1600, 2);


insert into grupare values (6, 'user6', 1200, 2);


commit;


--exemplu folosind clauza where
select *
from grupare
where salariu < 1100;


--exemplu folosind where si grupare
select manager_id, salariu
from grupare
where salariu < 1100
group by manager_id, salariu;


--exemplu folosind where, iar gruparea realizata doar dupa coloana manager_id
select manager_id
from grupare
where salariu < 1100
group by manager_id;


--exemplu folosind having
select max(salariu)
from grupare
having max(salariu) < 10000;


--group by si having
select manager_id, min(salariu)
from grupare
group by manager_id
having min(salariu) <= 1000;


1. where
2. group by
3. having 




drop table grupare;


2. Să se afişeze cel mai mare salariu, cel mai mic salariu, suma şi media salariilor
TUTUROR angajaţilor. Etichetaţi coloanele Maxim, Minim, Suma, respectiv Media. Sa se
rotunjeasca media salariilor.


SELECT MAX(salary) Maxim, MIN(salary) Minim, SUM(salary) Suma, round(AVG(salary)) Medie
FROM employees;




3. Să se modifice problema 2 pentru a se afişa minimul, maximul, suma şi media
salariilor pentru FIECARE job.


SELECT job_id, MAX(salary) Maxim, MIN(salary) Minim, SUM(salary) Suma, round(AVG(salary)) Medie
FROM employees
GROUP BY job_id;




4. Să se afişeze numărul de angajaţi pentru FIECARE departament.


SELECT COUNT(employee_id), department_id
FROM employees
GROUP BY department_id;


select count(employee_id)
from employees;  -- nr de ang din firma




-- daca avem departamente fara angajati dorim sa afisam id-ul dep si zero angajati 
-- right join - preluam toate departamentele chiar daca au sau nu angajati
SELECT d.department_id, COUNT(employee_id)
FROM employees e right join departments d on (e.department_id = d.department_id)
GROUP BY d.department_id; -- (1)




SELECT d.department_id, COUNT(*)
FROM employees e right join departments d on (e.department_id = d.department_id)
GROUP BY d.department_id; --(2)


--Toate funcţiile grup, cu excepţia lui COUNT(*), ignoră valorile null.
count(expresie)(1) -> returneaza numarul de linii pentru care expresia data nu are valoarea null


count(*) (2) -> nu ignora valorile null (numara toate elementele chiar daca sunt valori null)


5. Să se determine numărul de angajaţi care sunt şefi. Etichetati coloana “Nr.
manageri”.


select count(distinct manager_id)
from employees;


? De ce am folosit cuvântul cheie DISTINCT? Ce am fi obţinut dacă îl omiteam?




6. Să se afişeze diferenţa dintre cel mai mare si cel mai mic salariu. Etichetati
coloana “Diferenta”.


select max(salary) - min(salary) Diferenta
from employees;




7. Scrieţi o cerere pentru a se afişa numele departamentului, locaţia, numărul de
angajaţi şi salariul mediu pentru angajaţii din acel departament. Coloanele vor fi
etichetate corespunzător.


select department_name, location_id, count(employee_id), round(avg(salary))
from employees e join departments using (department_id)
group by department_name, location_id;


Tema: Laborator 3 -> ex:18 + Laborator 4 -> ex: 9 (0.5pct - primele 3 surse primite)
      Laborator 4 -> ex: 8, 10, 12, 13, 14 (bonus la final)
      
Deadline -> 28.03 (Sambata - inclusiv)